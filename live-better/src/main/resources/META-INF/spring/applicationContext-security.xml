<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http use-expressions="true"  auto-config='true'>
		<intercept-url pattern="/images/*" access="permitAll" />
		<intercept-url pattern="/img/*" access="permitAll" />
		<intercept-url pattern="/css/*" access="permitAll" />
		<intercept-url pattern="/styles/*" access="permitAll" />
		<intercept-url pattern="/auth/authenticated*" access="permitAll" />
		<intercept-url pattern="/login.jsp*" access="permitAll"/>
		<form-login login-page='/login.jsp' login-processing-url="/login.do" 
			authentication-failure-handler-ref="authFailureHandler"
			authentication-success-handler-ref="authSuccessHandler"/> 
		<logout logout-success-url="/login.jsp" logout-url="/logout.do" />
		<intercept-url pattern="/**" access="permitAll" />
		
	</http>
	
	<beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
	    <filter-chain-map path-type="ant">
	        <filter-chain pattern="/login" filters="sif,wsFilter"/>
	<!--         <filter-chain pattern="/logout" filters="sif,logoutFilter" /> -->
	        <filter-chain pattern="/**" filters="sif,fsi"/>
	    </filter-chain-map>
	</beans:bean>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="SELECT u.username, u.password, true AS enabled FROM system_users u where u.username = ?"
 				authorities-by-username-query="select u.username, sur.name from system_users u 
												inner join system_user_roles sur on sur.id = u.user_role_id								
												where u.username = ?"></jdbc-user-service>
		</authentication-provider>
	</authentication-manager>

	<global-method-security secured-annotations="enabled">
	</global-method-security>


	<!--WORKAROUND: https://jira.springsource.org/browse/SEC-1803 -->
	<beans:bean name="logoutSuccessHandler" class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
		<beans:property name="targetUrlParameter" value="spring-security-redirect" />
	</beans:bean>
	
	<beans:bean name="authSuccessHandler" class="com.livebetter.core.AuthSuccessHandler"/>
	<beans:bean name="authFailureHandler" class="com.livebetter.core.AuthFailureHandler"/>
	
	<beans:bean id="sif" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>
	
	<beans:bean id="wsFilter" class="com.livebetter.core.AuthFilter">
	  <beans:property name="authenticationManager" ref="authenticationManager"/>
	  <beans:property name="authenticationSuccessHandler" ref="authSuccessHandler"/>
	  <beans:property name="passwordParameter" value="pass"/>
	  <beans:property name="usernameParameter" value="user"/>
	  <beans:property name="postOnly" value="false"/>
	</beans:bean>
	
	<beans:bean id="httpRequestAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
	    <beans:property name="allowIfAllAbstainDecisions" value="false"/>
	    <beans:property name="decisionVoters">
	        <beans:list>
	            <beans:ref bean="roleVoter"/>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter"/>
	
	<beans:bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"/>
		
	<beans:bean id="fsi" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="accessDecisionManager" ref="httpRequestAccessDecisionManager"/>
        <beans:property name="securityMetadataSource">
            <filter-invocation-definition-source>
                <intercept-url pattern="/rest/**" access="ROLE_REST"/>
            </filter-invocation-definition-source>
        </beans:property>
    </beans:bean>
	
</beans:beans>