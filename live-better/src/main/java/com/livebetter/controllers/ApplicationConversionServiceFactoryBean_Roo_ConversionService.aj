// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.livebetter.controllers;

import com.livebetter.controllers.ApplicationConversionServiceFactoryBean;
import com.livebetter.domain.Activities;
import com.livebetter.domain.Drinks;
import com.livebetter.domain.Meals;
import com.livebetter.domain.Metabolisms;
import com.livebetter.domain.PersonActivities;
import com.livebetter.domain.PersonDrinks;
import com.livebetter.domain.PersonMeals;
import com.livebetter.domain.Persons;
import com.livebetter.domain.SystemUserRoles;
import com.livebetter.domain.SystemUsers;
import com.livebetter.domain.UsersToPersons;
import com.livebetter.services.ActivitiesService;
import com.livebetter.services.DrinksService;
import com.livebetter.services.MealsService;
import com.livebetter.services.MetabolismsService;
import com.livebetter.services.PersonActivitiesService;
import com.livebetter.services.PersonDrinksService;
import com.livebetter.services.PersonMealsService;
import com.livebetter.services.PersonsService;
import com.livebetter.services.SystemUserRolesService;
import com.livebetter.services.SystemUsersService;
import com.livebetter.services.UsersToPersonsService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    ActivitiesService ApplicationConversionServiceFactoryBean.activitiesService;
    
    @Autowired
    DrinksService ApplicationConversionServiceFactoryBean.drinksService;
    
    @Autowired
    MealsService ApplicationConversionServiceFactoryBean.mealsService;
    
    @Autowired
    MetabolismsService ApplicationConversionServiceFactoryBean.metabolismsService;
    
    @Autowired
    PersonActivitiesService ApplicationConversionServiceFactoryBean.personActivitiesService;
    
    @Autowired
    PersonDrinksService ApplicationConversionServiceFactoryBean.personDrinksService;
    
    @Autowired
    PersonMealsService ApplicationConversionServiceFactoryBean.personMealsService;
    
    @Autowired
    PersonsService ApplicationConversionServiceFactoryBean.personsService;
    
    @Autowired
    SystemUserRolesService ApplicationConversionServiceFactoryBean.systemUserRolesService;
    
    @Autowired
    SystemUsersService ApplicationConversionServiceFactoryBean.systemUsersService;
    
    @Autowired
    UsersToPersonsService ApplicationConversionServiceFactoryBean.usersToPersonsService;
    
    public Converter<Activities, String> ApplicationConversionServiceFactoryBean.getActivitiesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.Activities, java.lang.String>() {
            public String convert(Activities activities) {
                return new StringBuilder().append(activities.getName()).append(' ').append(activities.getType()).append(' ').append(activities.getCaloriesPerHour()).append(' ').append(activities.getCreatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, Activities> ApplicationConversionServiceFactoryBean.getIdToActivitiesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.Activities>() {
            public com.livebetter.domain.Activities convert(java.lang.Long id) {
                return activitiesService.findActivities(id);
            }
        };
    }
    
    public Converter<String, Activities> ApplicationConversionServiceFactoryBean.getStringToActivitiesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.Activities>() {
            public com.livebetter.domain.Activities convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Activities.class);
            }
        };
    }
    
    public Converter<Drinks, String> ApplicationConversionServiceFactoryBean.getDrinksToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.Drinks, java.lang.String>() {
            public String convert(Drinks drinks) {
                return new StringBuilder().append(drinks.getName()).append(' ').append(drinks.getType()).append(' ').append(drinks.getCarbohydrates()).append(' ').append(drinks.getProteins()).toString();
            }
        };
    }
    
    public Converter<Long, Drinks> ApplicationConversionServiceFactoryBean.getIdToDrinksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.Drinks>() {
            public com.livebetter.domain.Drinks convert(java.lang.Long id) {
                return drinksService.findDrinks(id);
            }
        };
    }
    
    public Converter<String, Drinks> ApplicationConversionServiceFactoryBean.getStringToDrinksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.Drinks>() {
            public com.livebetter.domain.Drinks convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Drinks.class);
            }
        };
    }
    
    public Converter<Meals, String> ApplicationConversionServiceFactoryBean.getMealsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.Meals, java.lang.String>() {
            public String convert(Meals meals) {
                return new StringBuilder().append(meals.getName()).append(' ').append(meals.getType()).append(' ').append(meals.getCarbohydrates()).append(' ').append(meals.getProteins()).toString();
            }
        };
    }
    
    public Converter<Long, Meals> ApplicationConversionServiceFactoryBean.getIdToMealsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.Meals>() {
            public com.livebetter.domain.Meals convert(java.lang.Long id) {
                return mealsService.findMeals(id);
            }
        };
    }
    
    public Converter<String, Meals> ApplicationConversionServiceFactoryBean.getStringToMealsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.Meals>() {
            public com.livebetter.domain.Meals convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Meals.class);
            }
        };
    }
    
    public Converter<Metabolisms, String> ApplicationConversionServiceFactoryBean.getMetabolismsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.Metabolisms, java.lang.String>() {
            public String convert(Metabolisms metabolisms) {
                return new StringBuilder().append(metabolisms.getName()).append(' ').append(metabolisms.getCreatedBy()).append(' ').append(metabolisms.getCreatedDatetime()).append(' ').append(metabolisms.getModifiedDatetime()).toString();
            }
        };
    }
    
    public Converter<Long, Metabolisms> ApplicationConversionServiceFactoryBean.getIdToMetabolismsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.Metabolisms>() {
            public com.livebetter.domain.Metabolisms convert(java.lang.Long id) {
                return metabolismsService.findMetabolisms(id);
            }
        };
    }
    
    public Converter<String, Metabolisms> ApplicationConversionServiceFactoryBean.getStringToMetabolismsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.Metabolisms>() {
            public com.livebetter.domain.Metabolisms convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Metabolisms.class);
            }
        };
    }
    
    public Converter<PersonActivities, String> ApplicationConversionServiceFactoryBean.getPersonActivitiesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.PersonActivities, java.lang.String>() {
            public String convert(PersonActivities personActivities) {
                return new StringBuilder().append(personActivities.getDatetimeOfConsumtion()).append(' ').append(personActivities.getQuantity()).append(' ').append(personActivities.getCreatedBy()).append(' ').append(personActivities.getCreatedDatetime()).toString();
            }
        };
    }
    
    public Converter<Long, PersonActivities> ApplicationConversionServiceFactoryBean.getIdToPersonActivitiesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.PersonActivities>() {
            public com.livebetter.domain.PersonActivities convert(java.lang.Long id) {
                return personActivitiesService.findPersonActivities(id);
            }
        };
    }
    
    public Converter<String, PersonActivities> ApplicationConversionServiceFactoryBean.getStringToPersonActivitiesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.PersonActivities>() {
            public com.livebetter.domain.PersonActivities convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PersonActivities.class);
            }
        };
    }
    
    public Converter<PersonDrinks, String> ApplicationConversionServiceFactoryBean.getPersonDrinksToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.PersonDrinks, java.lang.String>() {
            public String convert(PersonDrinks personDrinks) {
                return new StringBuilder().append(personDrinks.getDatetimeOfConsumtion()).append(' ').append(personDrinks.getQuantity()).append(' ').append(personDrinks.getCreatedBy()).append(' ').append(personDrinks.getCreatedDatetime()).toString();
            }
        };
    }
    
    public Converter<Long, PersonDrinks> ApplicationConversionServiceFactoryBean.getIdToPersonDrinksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.PersonDrinks>() {
            public com.livebetter.domain.PersonDrinks convert(java.lang.Long id) {
                return personDrinksService.findPersonDrinks(id);
            }
        };
    }
    
    public Converter<String, PersonDrinks> ApplicationConversionServiceFactoryBean.getStringToPersonDrinksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.PersonDrinks>() {
            public com.livebetter.domain.PersonDrinks convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PersonDrinks.class);
            }
        };
    }
    
    public Converter<PersonMeals, String> ApplicationConversionServiceFactoryBean.getPersonMealsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.PersonMeals, java.lang.String>() {
            public String convert(PersonMeals personMeals) {
                return new StringBuilder().append(personMeals.getDatetimeOfConsumtion()).append(' ').append(personMeals.getQuantity()).append(' ').append(personMeals.getCreatedBy()).append(' ').append(personMeals.getCreatedDatetime()).toString();
            }
        };
    }
    
    public Converter<Long, PersonMeals> ApplicationConversionServiceFactoryBean.getIdToPersonMealsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.PersonMeals>() {
            public com.livebetter.domain.PersonMeals convert(java.lang.Long id) {
                return personMealsService.findPersonMeals(id);
            }
        };
    }
    
    public Converter<String, PersonMeals> ApplicationConversionServiceFactoryBean.getStringToPersonMealsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.PersonMeals>() {
            public com.livebetter.domain.PersonMeals convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PersonMeals.class);
            }
        };
    }
    
    public Converter<Persons, String> ApplicationConversionServiceFactoryBean.getPersonsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.Persons, java.lang.String>() {
            public String convert(Persons persons) {
                return new StringBuilder().append(persons.getFirstname()).append(' ').append(persons.getMiddlename()).append(' ').append(persons.getLastname()).append(' ').append(persons.getDateOfBirth()).toString();
            }
        };
    }
    
    public Converter<Long, Persons> ApplicationConversionServiceFactoryBean.getIdToPersonsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.Persons>() {
            public com.livebetter.domain.Persons convert(java.lang.Long id) {
                return personsService.findPersons(id);
            }
        };
    }
    
    public Converter<String, Persons> ApplicationConversionServiceFactoryBean.getStringToPersonsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.Persons>() {
            public com.livebetter.domain.Persons convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Persons.class);
            }
        };
    }
    
    public Converter<SystemUserRoles, String> ApplicationConversionServiceFactoryBean.getSystemUserRolesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.SystemUserRoles, java.lang.String>() {
            public String convert(SystemUserRoles systemUserRoles) {
                return new StringBuilder().append(systemUserRoles.getName()).append(' ').append(systemUserRoles.getDescription()).append(' ').append(systemUserRoles.getCreatedBy()).append(' ').append(systemUserRoles.getLevel()).toString();
            }
        };
    }
    
    public Converter<Long, SystemUserRoles> ApplicationConversionServiceFactoryBean.getIdToSystemUserRolesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.SystemUserRoles>() {
            public com.livebetter.domain.SystemUserRoles convert(java.lang.Long id) {
                return systemUserRolesService.findSystemUserRoles(id);
            }
        };
    }
    
    public Converter<String, SystemUserRoles> ApplicationConversionServiceFactoryBean.getStringToSystemUserRolesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.SystemUserRoles>() {
            public com.livebetter.domain.SystemUserRoles convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SystemUserRoles.class);
            }
        };
    }
    
    public Converter<SystemUsers, String> ApplicationConversionServiceFactoryBean.getSystemUsersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.SystemUsers, java.lang.String>() {
            public String convert(SystemUsers systemUsers) {
                return new StringBuilder().append(systemUsers.getUsername()).append(' ').append(systemUsers.getPassword()).append(' ').append(systemUsers.getCreatedBy()).append(' ').append(systemUsers.getCreatedDatetime()).toString();
            }
        };
    }
    
    public Converter<Long, SystemUsers> ApplicationConversionServiceFactoryBean.getIdToSystemUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.SystemUsers>() {
            public com.livebetter.domain.SystemUsers convert(java.lang.Long id) {
                return systemUsersService.findSystemUsers(id);
            }
        };
    }
    
    public Converter<String, SystemUsers> ApplicationConversionServiceFactoryBean.getStringToSystemUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.SystemUsers>() {
            public com.livebetter.domain.SystemUsers convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SystemUsers.class);
            }
        };
    }
    
    public Converter<UsersToPersons, String> ApplicationConversionServiceFactoryBean.getUsersToPersonsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.livebetter.domain.UsersToPersons, java.lang.String>() {
            public String convert(UsersToPersons usersToPersons) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, UsersToPersons> ApplicationConversionServiceFactoryBean.getIdToUsersToPersonsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.livebetter.domain.UsersToPersons>() {
            public com.livebetter.domain.UsersToPersons convert(java.lang.Long id) {
                return usersToPersonsService.findUsersToPersons(id);
            }
        };
    }
    
    public Converter<String, UsersToPersons> ApplicationConversionServiceFactoryBean.getStringToUsersToPersonsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.livebetter.domain.UsersToPersons>() {
            public com.livebetter.domain.UsersToPersons convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UsersToPersons.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getActivitiesToStringConverter());
        registry.addConverter(getIdToActivitiesConverter());
        registry.addConverter(getStringToActivitiesConverter());
        registry.addConverter(getDrinksToStringConverter());
        registry.addConverter(getIdToDrinksConverter());
        registry.addConverter(getStringToDrinksConverter());
        registry.addConverter(getMealsToStringConverter());
        registry.addConverter(getIdToMealsConverter());
        registry.addConverter(getStringToMealsConverter());
        registry.addConverter(getMetabolismsToStringConverter());
        registry.addConverter(getIdToMetabolismsConverter());
        registry.addConverter(getStringToMetabolismsConverter());
        registry.addConverter(getPersonActivitiesToStringConverter());
        registry.addConverter(getIdToPersonActivitiesConverter());
        registry.addConverter(getStringToPersonActivitiesConverter());
        registry.addConverter(getPersonDrinksToStringConverter());
        registry.addConverter(getIdToPersonDrinksConverter());
        registry.addConverter(getStringToPersonDrinksConverter());
        registry.addConverter(getPersonMealsToStringConverter());
        registry.addConverter(getIdToPersonMealsConverter());
        registry.addConverter(getStringToPersonMealsConverter());
        registry.addConverter(getPersonsToStringConverter());
        registry.addConverter(getIdToPersonsConverter());
        registry.addConverter(getStringToPersonsConverter());
        registry.addConverter(getSystemUserRolesToStringConverter());
        registry.addConverter(getIdToSystemUserRolesConverter());
        registry.addConverter(getStringToSystemUserRolesConverter());
        registry.addConverter(getSystemUsersToStringConverter());
        registry.addConverter(getIdToSystemUsersConverter());
        registry.addConverter(getStringToSystemUsersConverter());
        registry.addConverter(getUsersToPersonsToStringConverter());
        registry.addConverter(getIdToUsersToPersonsConverter());
        registry.addConverter(getStringToUsersToPersonsConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
